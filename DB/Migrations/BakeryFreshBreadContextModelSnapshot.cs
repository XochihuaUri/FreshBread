// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(BakeryFreshBreadContext))]
    partial class BakeryFreshBreadContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DB.BreadOrder", b =>
                {
                    b.Property<Guid>("BreadOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BreadPrice")
                        .HasColumnType("float");

                    b.Property<int>("BreadType")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("TotalBreadOrderPrice")
                        .HasColumnType("float");

                    b.HasKey("BreadOrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("BreadOrder", (string)null);
                });

            modelBuilder.Entity("DB.Office", b =>
                {
                    b.Property<Guid>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OfficeType")
                        .HasColumnType("int");

                    b.HasKey("OfficeId");

                    b.ToTable("Office", (string)null);
                });

            modelBuilder.Entity("DB.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TotalOrderPrice")
                        .HasColumnType("float");

                    b.HasKey("OrderId");

                    b.HasIndex("OfficeId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("DB.BreadOrder", b =>
                {
                    b.HasOne("DB.Order", null)
                        .WithMany("BreadOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DB.Order", b =>
                {
                    b.HasOne("DB.Office", null)
                        .WithMany("Orders")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DB.Office", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DB.Order", b =>
                {
                    b.Navigation("BreadOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
